@model System.Data.DataTable
@using System.Data
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var tableName = ViewBag.TableName as string;

    List<string> tableNames = ViewBag.TableNames as List<string>;
    DataTable columnNames = ViewBag.ColumnNames as DataTable;
    string currentTableName = ViewBag.TableName as string;

    var dropDownOptions = new List<string>();
    var dbmasterid = @TempData["DbMasterId"];
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>


        var pageIndex = 0;
        var pageSize = 50000;
        var tableName = '@tableName';
        var dbmasterid = @dbmasterid;

        $(document).ready(function () {
            fetchData();

            $('.scroll-container').on('scroll', function () {
                console.log('Table is being scrolled');
                pageIndex++;
                fetchData();
            });

            $('#select-all').on('click', function () {
                $('input:checkbox').not(this).prop('checked', this.checked);
            });

            // function fetchData() {
            //     $.ajax({
            //         url: '@Url.Action("GetTableData", "Catalogue")',
            //         type: 'GET',
            //         data: { szDatabaseMasterId: dbmasterid, szTableName: tableName, szPageIndex: pageIndex, szPageSize: pageSize },
            //         success: function (data) {
            //             debugger
            //             if (data.length > 0) {
            //                 var tableHeader = $('<tr>');
            //                 tableHeader.append('<th><input type="checkbox" id="select-all"/></th>'); // Select All Checkbox

            //                 $.each(data[0], function (key, value) {
            //                     $('<th>').text(key).appendTo(tableHeader);
            //                 });

            //                 $('<th>').text('Actions').appendTo(tableHeader);

            //                 $('#dataTable thead').empty().append(tableHeader);

            //                 var tableBody = $('#dataTable tbody');
            //                 $.each(data, function (index, item) {
            //                     var row = $('<tr>').appendTo(tableBody);
            //                     $('<td>').append('<input type="checkbox" class="select-checkbox" data-id="' + item.Id + '"/>').appendTo(row); // Row Select Checkbox

            //                     $.each(item, function (key, value) {
            //                         $('<td>').text(value).appendTo(row);
            //                     });

            //                     var actions = $('<td>');
            //                     $('<button>')
            //                         .text('Edit')
            //                         .addClass('btn btn-primary edit-btn')
            //                         .attr('data-id', item.Id)
            //                         .appendTo(actions);
            //                     $('<button>')
            //                         .text('Delete')
            //                         .addClass('btn btn-danger delete-btn')
            //                         .attr('data-id', item.Id)
            //                         .appendTo(actions);
            //                     row.append(actions);
            //                 });

            //                 // Re-bind the select-all checkbox after new data is loaded
            //                 $('#select-all').on('click', function () {
            //                     $('input:checkbox').not(this).prop('checked', this.checked);
            //                 });

            //                 bindActions();
            //             }else{
                           
            //             }
            //         }
            //     });
            // }
            function fetchData() {
                $.ajax({
                    url: '@Url.Action("GetTableData", "Catalogue")',
                    type: 'GET',
                    data: { szDatabaseMasterId: dbmasterid, szTableName: tableName, szPageIndex: pageIndex, szPageSize: pageSize },
                    success: function (data) {
                        debugger
                        var tableHeader = $('#dataTable thead');
                        var tableBody = $('#dataTable tbody');

                        // Ensure the table structure is defined before manipulating
                        if (tableHeader.length === 0 || tableBody.length === 0) {
                            console.error("Table structure is missing. Ensure the <thead> and <tbody> exist in the HTML.");
                            return;
                        }

                        // tableHeader.empty(); // Clear any existing header
                        // tableBody.empty(); // Clear any existing body

                        if (data.length > 0) {
                            var headerRow = $('<tr>');
                            headerRow.append('<th><input type="checkbox" id="select-all"/></th>'); // Select All Checkbox

                            // Create table headers based on keys
                            $.each(data[0], function (key, value) {
                                $('<th>').text(key).appendTo(headerRow);
                            });

                            $('<th>').text('Actions').appendTo(headerRow);

                            tableHeader.append(headerRow);

                            $.each(data, function (index, item) {
                                var row = $('<tr>').appendTo(tableBody);
                                $('<td>').append('<input type="checkbox" class="select-checkbox" data-id="' + item.Id + '"/>').appendTo(row); // Row Select Checkbox

                                $.each(item, function (key, value) {
                                    $('<td>').text(value).appendTo(row);
                                });

                                var actions = $('<td>');
                                $('<button>')
                                    .text('Edit')
                                    .addClass('btn btn-primary edit-btn')
                                    .attr('data-id', item.Id)
                                    .appendTo(actions);
                                $('<button>')
                                    .text('Delete')
                                    .addClass('btn btn-danger delete-btn')
                                    .attr('data-id', item.Id)
                                    .appendTo(actions);
                                row.append(actions);
                            });

                            // Re-bind the select-all checkbox after new data is loaded
                            $('#select-all').on('click', function () {
                                $('input:checkbox').not(this).prop('checked', this.checked);
                            });

                            bindActions();
                        } else {
                            // Display a "No data available" message
                            var noDataRow = $('<tr>');
                            $('<td>')
                                .attr('colspan', tableHeader.find('th').length || 1)
                                .addClass('text-center')
                                .text('No data available')
                                .appendTo(noDataRow);
                            tableBody.append(noDataRow);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("An error occurred while fetching data: " + error);
                    }
                });
            }

            function bindActions() {
                $('.edit-btn').off('click').on('click', function () {
                    var id = $(this).data('id');
                    console.log('Edit', id);
                });

                $('.delete-btn').off('click').on('click', function () {
                    var id = $(this).data('id');
                    if (confirm('Are you sure you want to delete this item?')) {
                        $.ajax({
                            url: '@Url.Action("DeleteData", "Catalogue")',
                            type: 'POST',
                            data: { id: id, tableName: tableName, szDatabaseMasterId: dbmasterid },
                            success: function (response) {
                                alert('Item deleted successfully');
                                location.reload();
                            }
                        });
                    }
                });
            }
        });

        var deleteId = null;
        var tableName = '@ViewData["TableName"]';
        var dbmasterid = @dbmasterid;

        // Show Delete Confirmation Modal
        $(document).on('click', '.delete-btn', function () {
            deleteId = $(this).data('id');
            $('#deleteModal').show();
        });

        // Handle "Yes" Button Click for Single Record Deletion
        $('#confirmDelete').click(function () {
            if (deleteId !== null) {
                $.ajax({
                    url: '@Url.Action("Delete", "Catalogue")',
                    type: 'POST',
                    data: { id: deleteId, tableName: tableName, szDatabaseMasterId: dbmasterid },
                    success: function (response) {
                        if (response.success) {
                            alert('Record deleted successfully');
                            location.reload();
                        } else {
                            alert('An error occurred: ' + response.message);
                        }
                        $('#deleteModal').hide();
                    },
                    error: function () {
                        alert('An error occurred while deleting the record');
                        $('#deleteModal').hide();
                    }
                });
            }
        });

        // Handle "Delete All" Button Click
        $('#deleteAll').click(function () {
            if (confirm('Are you sure you want to delete all records? This action cannot be undone.')) {
                $.ajax({
                    url: '@Url.Action("DeleteAll", "Catalogue")',
                    type: 'POST',
                    data: { tableName: tableName, szDatabaseMasterId: dbmasterid },
                    success: function (response) {
                        if (response.success) {
                            alert('All records deleted successfully');
                            location.reload();
                        } else {
                            alert('An error occurred: ' + response.message);
                        }
                        $('#deleteModal').hide();
                    },
                    error: function () {
                        alert('An error occurred while deleting all records');
                        $('#deleteModal').hide();
                    }
                });
            }
        });

        // Handle Modal Close
        $('.close, .btn-secondary').click(function () {
            $('#deleteModal').hide();
        });

      
    </script>
}






@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Delete Confirmation</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span>&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <p>Are you sure you want to delete this record?</p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            <button type="button" class="btn btn-danger" id="confirmDelete">Yes, Delete</button>
            <button type="button" class="btn btn-danger" id="deleteAll">Delete All</button>
        </div>
    </div>
</div>


<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Catalogues /</span> @currentTableName</h4>

    <div class="col-xl-12">
        <div class="nav-align-top mb-4">
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item">
                    <button type="button"
                            class="nav-link active"
                            role="tab"
                            data-bs-toggle="tab"
                            data-bs-target="#navs-top-home"
                            aria-controls="navs-top-home"
                            aria-selected="true">
                        @tableName Data
                    </button>
                </li>
                <li class="nav-item">
                    <button type="button"
                            class="nav-link"
                            role="tab"
                            data-bs-toggle="tab"
                            data-bs-target="#navs-add-data"
                            aria-controls="navs-add-data"
                            aria-selected="false">
                        Add Data
                    </button>
                </li>
                <li class="nav-item">
                    <button type="button"
                            class="nav-link"
                            role="tab"
                            data-bs-toggle="tab"
                            data-bs-target="#navs-top-profile"
                            aria-controls="navs-top-profile"
                            aria-selected="false">
                        Edit Columns
                    </button>
                </li>
                <li class="nav-item">
                    <button type="button"
                            class="nav-link"
                            role="tab"
                            data-bs-toggle="tab"
                            data-bs-target="#navs-top-messages"
                            aria-controls="navs-top-messages"
                            aria-selected="false">
                        Upload Data
                    </button>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane fade show active" id="navs-top-home" role="tabpanel">
                    
                    <div class="table-responsive text-nowrap">
                        <table class="table table-hover" id="dataTable">
                            <thead>
                            </thead>
                            <tbody class="table-border-bottom-0 table-body">
                            </tbody>
                        </table>
                    </div>

                </div> 
                <div class="tab-pane fade" id="navs-add-data" role="tabpanel">

                    <form asp-controller="Catalogue" asp-action="AddData" method="post" id="catalogueForm">
                        <input type="hidden" name="tableName" value="@tableName" />
                        <input type="hidden" name="szDatabaseMasterId" value="@dbmasterid" />
                        <input class="form-control" id="editPlanId" hidden>
                            <div class="modal-body">

                                @foreach (DataRow row in columnNames.Rows)
                                {
                                    var columnName = @row["COLUMN_NAME"].ToString();
                                    var columnType = @row["DATA_TYPE"].ToString();
                                    var columnData = @row["coldata"].ToString();

                                    if (columnType == "bit" || columnType == "datetimeoffset")
                                    {

                                    }
                                    else
                                    {
                                        if (@row["COLUMN_NAME"].ToString().Equals("CreatedDate") || @row["COLUMN_NAME"].ToString().Equals("Id") || @row["COLUMN_NAME"].ToString().Equals("id"))
                                        {
                                            <!-- Skip specific columns -->
                                        }
                                        else
                                        {
                                            <div class="form-group d-inline-block w-auto">
                                                @if (columnType == "int")
                                                {
                                                    <input type="number" name="data[@columnName]" placeholder="@columnName" class="form-control" @* required *@ />
                                                }
                                                else if (columnType == "nvarchar")
                                                {
                                                    <input type="text" name="data[@columnName]" placeholder="@columnName" class="form-control" @* required pattern=".*\S.*" title="This field cannot be empty or contain only spaces." *@ />
                                                }
                                                else if (columnType == "datetime2")
                                                {
                                                    @*  else if (@row["COLUMN_NAME"].ToString().Contains("scheduleTime"))
                                    {
                                    <input type="hidden" name="data[@row["COLUMN_NAME"].ToString()]" value="@DateTime.Now" />
                                    }
                                    *@
                                                    <input type="datetime-local" name="data[@columnName]" placeholder="@columnName" class="form-control" value="@DateTime.Now" required />
                                                }
                                                else
                                                {

                                                    var coltype = columnType;
                                                    var strsplit = columnData.Split('~');

                                                    foreach (var str in strsplit)
                                                    {
                                                        @if (!dropDownOptions.Contains(str))
                                                        {
                                                            dropDownOptions.Add(str);
                                                        }
                                                    }
                                                    @if (dropDownOptions.Any())
                                                    {
                                                        if (coltype.Equals("oneselect"))
                                                        {
                                                            <div class="form-group d-inline-block w-auto">
                                                                <select name="data[@columnName]" class="form-control">
                                                                    @foreach (var option in dropDownOptions)
                                                                    {
                                                                        if (!option.Equals(""))
                                                                        {
                                                                            string[] strsply = option.Split('-');
                                                                            <option value="@strsply[1]">@strsply[0]</option>
                                                                        }
                                                                    }
                                                                </select>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="form-group">
                                                                <label for="itemSearch" class="control-label">Search Items</label>
                                                                <input type="text" id="itemSearch" class="form-control" placeholder="Search items..." />
                                                            </div>

                                                            <div class="form-group" style="max-height: 400px; overflow-y: scroll;">
                                                                <div id="itemsContainer">
                                                                    @foreach (var option in dropDownOptions)
                                                                    {
                                                                        if (!option.Equals(""))
                                                                        {
                                                                            string[] strsply = option.Split('-');

                                                                            <div class="form-check">
                                                                                <input type="checkbox" class="form-check-input" data-name="@strsply[0]~@columnName" data-id="@strsply[1]" />
                                                                                <label class="form-check-label">@strsply[0]</label>
                                                                            </div>
                                                                        }

                                                                    }
                                                                </div>
                                                            </div>

                                                            <div id="hiddenFieldsContainer"></div>
                                                        }

                                                    }



                                                    dropDownOptions.Clear();
                                                }
                                            </div>
                                        }
                                    }
                                }

                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Save</button>
                            </div>
                    </form>

                </div>
                <div class="tab-pane fade" id="navs-top-profile" role="tabpanel">
                    <div class="col">
                        <label>
                            <p class="card-description">
                                Column Add
                            </p>
                        </label>
                        <div id="the-basics">
                            <form asp-controller="Catalogue" asp-action="AddColumn" method="post" class="d-inline">

                                <input type="hidden" name="tableName" value="@currentTableName" />
                                <input type="hidden" name="szDatabaseMasterId" value="@TempData["DbMasterId"]" />
                                <input type="text" name="columnName" placeholder="New Column Name" class="form-control d-inline-block w-auto mb-2" required />
                                <select name="columnType" class="form-control d-inline-block w-auto mb-2" required>
                                    <option value="int">INT</option>
                                    <option value="nvarchar(100)">NVARCHAR(100)</option>
                                    <option value="datetime">DATETIME</option>
                                    <!-- Add more types as needed -->
                                    <option value="foreign_key">FOREIGN KEY</option>
                                </select>
                                <select name="referencedTable" class="form-control d-inline-block w-auto mb-2">
                                    <option value="" disabled selected>Select Referenced Table</option>
                                    @foreach (var tableName1 in tableNames)
                                    {
                                        <option value="@tableName1">@tableName1</option>
                                    }
                                </select>
                                <input type="text" name="referencedColumn" placeholder="Referenced Column" class="form-control d-inline-block w-auto mb-2" value="Id" disabled />
                                <button type="submit" class="btn btn-primary mb-2">Add Column</button>
                            </form>
                        </div>
                    </div>
                    <div class="col">
                        <label>
                            <p class="card-description">
                                Column Delete
                            </p>
                        </label>
                        <div id="bloodhound">
                            <form asp-controller="Catalogue" asp-action="DeleteColumn" method="post" class="d-inline">
                                <input type="hidden" name="tableName" value="@tableName" />

                                <input type="hidden" name="szDatabaseMasterId" value="@TempData["DbMasterId"]" />
                                <select name="columnName" class="form-control d-inline-block w-auto mb-2" required>
                                    @foreach (DataRow row in columnNames.Rows)
                                    {
                                        <option value="@row["COLUMN_NAME"].ToString()">@row["COLUMN_NAME"].ToString()</option>
                                    }
                                </select>
                                <button type="submit" class="btn btn-danger mb-2">Delete Column</button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="navs-top-messages" role="tabpanel">
                    <h4 class="card-title">Upload File/Download Template</h4>
                    <div class="form-group">
                        <form asp-controller="Catalogue" asp-action="UploadFile" asp-route-tablename="@tableName" asp-route-szDatabaseMasterId="@dbmasterid" enctype="multipart/form-data" method="post">
                            <div class="form-group">
                                <label for="file">Select file to upload (xlsx or csv):</label>
                                <input type="file" name="file" class="form-control" required />
                            </div>
                            <div class="d-flex justify-content-between">
                                <button type="submit" class="btn btn-danger btn-icon-text">
                                    <i class="ti-upload btn-icon-prepend"></i>
                                    Upload
                                </button>

                            </div>
                        </form>
                    </div>
                    <div class="form-group">
                        <form method="get" asp-controller="Catalogue" asp-action="DownloadTemplate">
                            <div class="form-group">
                                <label hidden for="tableName">Table Name</label>
                                <input type="text" value="@tableName" class="form-control" id="tableName" name="tableName" required hidden />
                            </div>
                            <button type="submit" class="btn btn-primary">Download Template</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    #navs-top-home .table-responsive {
        max-height: 500px;
        overflow-y: auto;
    }

</style>

  