@model System.Data.DataTable
@using System.Data
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var tableName = ViewBag.TableName as string;

    List<string> tableNames = ViewBag.TableNames as List<string>;
    DataTable columnNames = ViewBag.ColumnNames as DataTable;
    string currentTableName = ViewBag.TableName as string;

    var dropDownOptions = new List<string>();
    var dbmasterid = @TempData["DbMasterId"];
}

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>

        // Get the modal
        var modal = document.getElementById("myModal");

        // Get the button that opens the modal
        var btn = document.getElementById("myBtn");

        // Get the <span> element that closes the modal
        var span1 = document.getElementsByClassName("close1")[0];

        // When the user clicks the button, open the modal
        btn.onclick = function () {
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span1.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }

        /////////////////////////////////// Get the modal
        var myEditColumnModalmodal = document.getElementById("myEditColumnModal");

        // Get the button that opens the modal
        var myEditColumnBtnbtn = document.getElementById("myEditColumnBtn");

        // Get the <span> element that closes the modal
        var span2 = document.getElementsByClassName("close2")[0];

        // When the user clicks the button, open the modal
        myEditColumnBtnbtn.onclick = function () {
            myEditColumnModalmodal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span2.onclick = function () {
            myEditColumnModalmodal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == myEditColumnModalmodal) {
                myEditColumnModalmodal.style.display = "none";
            }
        }
        
        /////////////////////////////////// Get the modal
        var myuploadfileModal = document.getElementById("myuploadfileModal");

        // Get the button that opens the modal
        var myuploadfileBtn = document.getElementById("myuploadfileBtn");

        // Get the <span> element that closes the modal
        var span3 = document.getElementsByClassName("close3")[0];

        // When the user clicks the button, open the modal
        myuploadfileBtn.onclick = function () {
            myuploadfileModal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span3.onclick = function () {
            myuploadfileModal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == myuploadfileModal) {
                myuploadfileModal.style.display = "none";
            }
        }

        /////////////////////////////////

        $(document).ready(function () {
            var pageIndex = 0;
            var pageSize = 50;
            var tableName = '@ViewData["TableName"]';
            var dbmasterid = @dbmasterid;
            fetchData();


            $('.scroll-container').on('scroll', function () {
                // Handle the scroll event
                console.log('Table is being scrolled');
                // You can add your custom logic here

                pageIndex++;
                fetchData();
            });
            function fetchData() {
                debugger
                $.ajax({
                    url: '@Url.Action("GetTableData", "Catalogue")',
                    type: 'GET',
                    data: { szDatabaseMasterId : dbmasterid , szTableName: tableName, szPageIndex: pageIndex, szPageSize: pageSize },
                    success: function (data) {
                        debugger
                        if (data.length > 0) {
                            debugger
                            var tableHeader = $('<tr>');
                            $.each(data[0], function (key, value) {
                                $('<th>').text(key).appendTo(tableHeader);
                            });

                            $('#dataTable thead').empty().append(tableHeader);

                            var tableBody = $('#dataTable tbody');
                            $.each(data, function (index, item) {
                                var row = $('<tr>').appendTo(tableBody);
                                $.each(item, function (key, value) {
                                    $('<td>').text(value).appendTo(row);
                                });
                            });


                        }
                    }
                });
            }
        });



        document.getElementById('catalogueForm').addEventListener('submit', function (event) {
            debugger
            var checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');
            var container = document.getElementById('hiddenFieldsContainer');
            container.innerHTML = ''; // Clear any existing hidden fields

            checkboxes.forEach(function (checkbox) {
                debugger
                var name = checkbox.getAttribute('data-name');
                var id = checkbox.getAttribute('data-id');

                var inputName = document.createElement('input');
                inputName.type = 'hidden';
                inputName.name = 'data[' + name + ']';
                inputName.value = id;
                container.appendChild(inputName);
            });
        });

        $(document).ready(function () {
            $('#itemSearch').on('input', function () {
                var searchValue = $(this).val().toLowerCase();
                $('#itemsContainer .form-check').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(searchValue) > -1);
                });
            });

            $('#catalogueForm').on('submit', function (event) {
                debugger
                var checkboxes = $('#itemsContainer input[type="checkbox"]:checked');
                var container = $('#hiddenFieldsContainer');
                container.empty(); // Clear any existing hidden fields

                checkboxes.each(function () {
                    var name = $(this).data('name');
                    var id = $(this).data('id');

                    var inputName = $('<input>').attr({
                        type: 'hidden',
                        name: 'data[' + name + ']',
                        value: id
                    });
                    container.append(inputName);
                });
            });
        });
    </script>
}





<style>

    /* .main-panel{
        max-width: 2000px;
        margin: 37px auto;
        padding: 0px;
    } */
    .scroll-container {
        display: flex;
        flex-direction: column;
        overflow-x: auto;
    }

    .table-header {
        overflow: hidden;
    }

    .table-body {
        overflow-y: auto;
        overflow-x: auto;
        max-height: 500px; /* Adjust this value as needed */
    }

        .table-header table,
        .table-body table {
            margin-bottom: 0;
            white-space: nowrap;
        }

    .table-header th {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: #343a40;
    }

    .thead-dark th {
        color: #343a40;
        background-color: #343a40;
    }

    .card {
        background-color: #F4F5F7;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        color: white; /* Adjust text color for contrast */
    }

    .card-title {
        color: white; /* Ensure the title is readable */
    }

    .btn-danger, .btn-primary, .btn-warning {
        border-color: white; /* Ensure buttons are visible against the background */
    }

    .form-control {
        color: black; /* Input text color */
    }

</style>






<!-- Include Bootstrap CSS and JavaScript -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<!-- Custom CSS -->

<style>

    .scroll-container {
        max-height: 400px; /* Set your desired fixed height */
        overflow-y: scroll;
    }

    /* Optional: To ensure the table header stays fixed while scrolling */
    #dataTable thead {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: white; /* Adjust this to match your table header background */
    }

    /* .scroll-container {
            display: flex;
            flex-direction: column;
            overflow-x: auto;
        } */

    .table-header {
        overflow: hidden;
    }

    .table-body {
        overflow-y: auto;
        overflow-x: auto;
        max-height: 500px; /* Adjust this value as needed */
    }

        .table-header table,
        .table-body table {
            margin-bottom: 0;
            white-space: nowrap;
        }

    .table-header th {
        position: sticky;
        top: 0;
        z-index: 1;
        background-color: #343a40;
    }

    .thead-dark th {
        color: black;
        background-color: #343a40;
    }

    .card {
        background-color: #F4F5F7;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        color: white; /* Adjust text color for contrast */
    }

    .card-title {
        color: white; /* Ensure the title is readable */
    }

    .btn-danger, .btn-primary, .btn-warning {
        border-color: white; /* Ensure buttons are visible against the background */
    }

    .form-control {
        color: black; /* Input text color */
    }

    select[multiple] {
        height: auto;
        overflow-y: auto;
    }
    ///////////////////////////////////////
    body {
        font-family: Arial, Helvetica, sans-serif;
    }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

</style>
<!-- Include Bootstrap CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">

<!-- Include jQuery -->
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<!-- Include Bootstrap JS -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

<!-- Include Bootstrap Multiselect CSS and JS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-multiselect@1.1.1/dist/css/bootstrap-multiselect.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-multiselect@1.1.1/dist/js/bootstrap-multiselect.min.js"></script>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<!-- The Modal -->
<div id="myModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <form asp-controller="Catalogue" asp-action="AddData" method="post" id="catalogueForm">
            <input type="hidden" name="tableName" value="@tableName" />
            <input type="hidden" name="szDatabaseMasterId" value="@dbmasterid" />
            <div class="modal-content rounded-0">
                <div class="modal-header">
                    <h5 class="modal-title" id="editPlanModalLabel">Add @tableName data</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span1 class="close1">&times;</span1>
                    </button>
                </div>
                <input class="form-control" id="editPlanId" hidden>
                <div class="modal-body">

                    @foreach (DataRow row in columnNames.Rows)
                    {
                        var columnName = @row["COLUMN_NAME"].ToString();
                        var columnType = @row["DATA_TYPE"].ToString();
                        var columnData = @row["coldata"].ToString();

                        if (columnType == "bit" || columnType == "datetimeoffset")
                        {

                        }
                        else
                        {
                            if (@row["COLUMN_NAME"].ToString().Equals("CreatedDate") || @row["COLUMN_NAME"].ToString().Equals("Id") || @row["COLUMN_NAME"].ToString().Equals("id"))
                            {
                                <!-- Skip specific columns -->
                            }
                            else
                            {
                                <div class="form-group d-inline-block w-auto">
                                    @if (columnType == "int")
                                    {
                                        <input type="number" name="data[@columnName]" placeholder="@columnName" class="form-control" @* required *@ />
                                    }
                                    else if (columnType == "nvarchar")
                                    {
                                        <input type="text" name="data[@columnName]" placeholder="@columnName" class="form-control" @* required pattern=".*\S.*" title="This field cannot be empty or contain only spaces." *@ />
                                    }
                                    else if (columnType == "datetime2")
                                    {
                                        @*  else if (@row["COLUMN_NAME"].ToString().Contains("scheduleTime"))
                        {
                        <input type="hidden" name="data[@row["COLUMN_NAME"].ToString()]" value="@DateTime.Now" />
                        }
                        *@
                                        <input type="datetime-local" name="data[@columnName]" placeholder="@columnName" class="form-control" value="@DateTime.Now" required />
                                    }
                                    else
                                    {

                                        var coltype = columnType;
                                        var strsplit = columnData.Split('~');

                                        foreach (var str in strsplit)
                                        {
                                            @if (!dropDownOptions.Contains(str))
                                            {
                                                dropDownOptions.Add(str);
                                            }
                                        }
                                        @if (dropDownOptions.Any())
                                        {
                                            if (coltype.Equals("oneselect"))
                                            {
                                                <div class="form-group d-inline-block w-auto">
                                                    <select name="data[@columnName]" class="form-control">
                                                        @foreach (var option in dropDownOptions)
                                                        {
                                                            if (!option.Equals(""))
                                                            {
                                                                string[] strsply = option.Split('-');
                                                                <option value="@strsply[1]">@strsply[0]</option>
                                                            }
                                                        }
                                                    </select>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-group">
                                                    <label for="itemSearch" class="control-label">Search Items</label>
                                                    <input type="text" id="itemSearch" class="form-control" placeholder="Search items..." />
                                                </div>

                                                <div class="form-group" style="max-height: 400px; overflow-y: scroll;">
                                                    <div id="itemsContainer">
                                                        @foreach (var option in dropDownOptions)
                                                        {
                                                            if (!option.Equals(""))
                                                            {
                                                                string[] strsply = option.Split('-');

                                                                <div class="form-check">
                                                                    <input type="checkbox" class="form-check-input" data-name="@strsply[0]~@columnName" data-id="@strsply[1]" />
                                                                    <label class="form-check-label">@strsply[0]</label>
                                                                </div>
                                                            }

                                                        }
                                                    </div>
                                                </div>

                                                <div id="hiddenFieldsContainer"></div>
                                            }

                                        }



                                        dropDownOptions.Clear();
                                    }
                                </div>
                            }
                        }
                    }

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </div>
        </form>
    </div>

</div>
@*edit columns*@


<!-- The Modal -->
<div id="myEditColumnModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-content rounded-0">
            <div class="modal-header">
                <h5 class="modal-title" id="editPlanModalLabel">Add @tableName data</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span2 class="close2">&times;</span2>
                </button>
            </div>
            <div class="col">
                <label>
                    <p class="card-description">
                        Column Add
                    </p>
                </label>
                <div id="the-basics">
                    <form asp-controller="Catalogue" asp-action="AddColumn" method="post" class="d-inline">

                        <input type="hidden" name="tableName" value="@currentTableName" />
                        <input type="hidden" name="szDatabaseMasterId" value="@TempData["DbMasterId"]" />
                        <input type="text" name="columnName" placeholder="New Column Name" class="form-control d-inline-block w-auto mb-2" required />
                        <select name="columnType" class="form-control d-inline-block w-auto mb-2" required>
                            <option value="int">INT</option>
                            <option value="nvarchar(100)">NVARCHAR(100)</option>
                            <option value="datetime">DATETIME</option>
                            <!-- Add more types as needed -->
                            <option value="foreign_key">FOREIGN KEY</option>
                        </select>
                        <select name="referencedTable" class="form-control d-inline-block w-auto mb-2">
                            <option value="" disabled selected>Select Referenced Table</option>
                            @foreach (var tableName1 in tableNames)
                            {
                                <option value="@tableName1">@tableName1</option>
                            }
                        </select>
                        <input type="text" name="referencedColumn" placeholder="Referenced Column" class="form-control d-inline-block w-auto mb-2" value="Id" disabled />
                        <button type="submit" class="btn btn-primary mb-2">Add Column</button>
                    </form>
                </div>
            </div>
            <div class="col">
                <label>
                    <p class="card-description">
                        Column Delete
                    </p>
                </label>
                <div id="bloodhound">
                    <form asp-controller="Catalogue" asp-action="DeleteColumn" method="post" class="d-inline">
                        <input type="hidden" name="tableName" value="@tableName" />

                        <input type="hidden" name="szDatabaseMasterId" value="@TempData["DbMasterId"]" />
                        <select name="columnName" class="form-control d-inline-block w-auto mb-2" required>
                            @foreach (DataRow row in columnNames.Rows)
                            {
                                <option value="@row["COLUMN_NAME"].ToString()">@row["COLUMN_NAME"].ToString()</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-danger mb-2">Delete Column</button>
                    </form>
                </div>
            </div>  
        </div>
    </div>
    </div>
@*uploadfile*@

<!-- The Modal -->
<div id="myuploadfileModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-content rounded-0">
            <div class="modal-header">
                <h5 class="modal-title" id="editPlanModalLabel">Upload File/Download  @tableName  Template</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span3 class="close3">&times;</span3>
                </button>
            </div>
            <h4 class="card-title">Upload File/Download Template</h4>
            <div class="form-group">
                <form asp-controller="Catalogue" asp-action="UploadFile" asp-route-tablename="@tableName" asp-route-szDatabaseMasterId="@dbmasterid" enctype="multipart/form-data" method="post">
                    <div class="form-group">
                        <label for="file">Select file to upload (xlsx or csv):</label>
                        <input type="file" name="file" class="form-control" required />
                    </div>
                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-danger btn-icon-text">
                            <i class="ti-upload btn-icon-prepend"></i>
                            Upload
                        </button>

                    </div>
                </form>
            </div>
            <div class="form-group">
                <form method="get" asp-controller="Catalogue" asp-action="DownloadTemplate">
                    <div class="form-group">
                        <label hidden for="tableName">Table Name</label>
                        <input type="text" value="@tableName" class="form-control" id="tableName" name="tableName" required hidden />
                    </div>
                    <button type="submit" class="btn btn-primary">Download Template</button>
                </form>
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-sm-12">
        <div class="home-tab">
            <div class="d-sm-flex align-items-center justify-content-between border-bottom">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item">
                        <button type="button" class="btn btn-success btn-rounded btn-fw nav-link active ps-0" id="myBtn">Add New</button>
                    </li>
                    <li class="nav-item">
                        <button type="button" class="btn btn-danger btn-rounded btn-fw nav-link active ps-0" id="myEditColumnBtn">Add Column</button>
                    </li>
                    <li class="nav-item">
                        <button type="button" class="btn btn-warning btn-rounded btn-fw nav-link active ps-0" id="myuploadfileBtn">Upload File</button>
                    </li>
                </ul>
                <div>
                    <div class="btn-wrapper">
                        <a href="#" class="btn btn-otline-dark align-items-center"><i class="icon-share"></i> Share</a>
                        <a href="#" class="btn btn-otline-dark"><i class="icon-printer"></i> Print</a>
                        <a href="#" class="btn btn-primary text-white me-0"><i class="icon-download"></i> Export</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="scroll-container table-responsive">
    <div id="scrollContainer">
        <table id="dataTable" class="table table-hover table-striped">
            <thead>
            </thead>
            <tbody class="table-body">
            </tbody>
        </table>
    </div>
</div>

